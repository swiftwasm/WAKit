[
  ["mvp"                 , "unreachable"               , null  , "0x00", "visitUnreachable"           , []                                                 ],
  ["mvp"                 , "nop"                       , null  , "0x01", "visitNop"                   , []                                                 ],
  ["mvp"                 , "block"                     , null  , "0x02", "visitBlock"                 , [["blockType", "BlockType"]]                       ],
  ["mvp"                 , "loop"                      , null  , "0x03", "visitLoop"                  , [["blockType", "BlockType"]]                       ],
  ["mvp"                 , "if"                        , null  , "0x04", "visitIf"                    , [["blockType", "BlockType"]]                       ],
  ["mvp"                 , "else"                      , null  , "0x05", "visitElse"                  , []                                                 ],
  ["mvp"                 , "end"                       , null  , "0x0B", "visitEnd"                   , []                                                 ],
  ["mvp"                 , "br"                        , null  , "0x0C", "visitBr"                    , [["relativeDepth", "UInt32"]]                      ],
  ["mvp"                 , "br_if"                     , null  , "0x0D", "visitBrIf"                  , [["relativeDepth", "UInt32"]]                      ],
  ["mvp"                 , "br_table"                  , null  , "0x0E", "visitBrTable"               , [["targets", "BrTable"]]                           ],
  ["mvp"                 , "return"                    , null  , "0x0F", "visitReturn"                , []                                                 ],
  ["mvp"                 , "call"                      , null  , "0x10", "visitCall"                  , [["functionIndex", "UInt32"]]                      ],
  ["mvp"                 , "call_indirect"             , null  , "0x11", "visitCallIndirect"          , [["typeIndex", "UInt32"], ["tableIndex", "UInt32"]]],
  ["mvp"                 , "drop"                      , null  , "0x1A", "visitDrop"                  , []                                                 ],
  ["mvp"                 , "select"                    , null  , "0x1B", "visitSelect"                , []                                                 ],
  ["referenceTypes"      , {"enumCase": "typedSelect"} , null  , "0x1C", "visitTypedSelect"           , [["type", "ValueType"]]                            ],
  ["mvp"                 , "local.get"                 , null  , "0x20", "visitLocalGet"              , [["localIndex", "UInt32"]]                         ],
  ["mvp"                 , "local.set"                 , null  , "0x21", "visitLocalSet"              , [["localIndex", "UInt32"]]                         ],
  ["mvp"                 , "local.tee"                 , null  , "0x22", "visitLocalTee"              , [["localIndex", "UInt32"]]                         ],
  ["mvp"                 , "global.get"                , null  , "0x23", "visitGlobalGet"             , [["globalIndex", "UInt32"]]                        ],
  ["mvp"                 , "global.set"                , null  , "0x24", "visitGlobalSet"             , [["globalIndex", "UInt32"]]                        ],
  ["mvp"                 , "i32.load"                  , null  , "0x28", "visitI32Load"               , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load"                  , null  , "0x29", "visitI64Load"               , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "f32.load"                  , null  , "0x2A", "visitF32Load"               , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "f64.load"                  , null  , "0x2B", "visitF64Load"               , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.load8_s"               , null  , "0x2C", "visitI32Load8S"             , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.load8_u"               , null  , "0x2D", "visitI32Load8U"             , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.load16_s"              , null  , "0x2E", "visitI32Load16S"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.load16_u"              , null  , "0x2F", "visitI32Load16U"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load8_s"               , null  , "0x30", "visitI64Load8S"             , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load8_u"               , null  , "0x31", "visitI64Load8U"             , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load16_s"              , null  , "0x32", "visitI64Load16S"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load16_u"              , null  , "0x33", "visitI64Load16U"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load32_s"              , null  , "0x34", "visitI64Load32S"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.load32_u"              , null  , "0x35", "visitI64Load32U"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.store"                 , null  , "0x36", "visitI32Store"              , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.store"                 , null  , "0x37", "visitI64Store"              , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "f32.store"                 , null  , "0x38", "visitF32Store"              , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "f64.store"                 , null  , "0x39", "visitF64Store"              , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.store8"                , null  , "0x3A", "visitI32Store8"             , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i32.store16"               , null  , "0x3B", "visitI32Store16"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.store8"                , null  , "0x3C", "visitI64Store8"             , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.store16"               , null  , "0x3D", "visitI64Store16"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "i64.store32"               , null  , "0x3E", "visitI64Store32"            , [["memarg", "MemArg"]]                             ],
  ["mvp"                 , "memory.size"               , null  , "0x3F", "visitMemorySize"            , [["memory", "UInt32"]]                             ],
  ["mvp"                 , "memory.grow"               , null  , "0x40", "visitMemoryGrow"            , [["memory", "UInt32"]]                             ],
  ["mvp"                 , "i32.const"                 , null  , "0x41", "visitI32Const"              , [["value", "Int32"]]                               ],
  ["mvp"                 , "i64.const"                 , null  , "0x42", "visitI64Const"              , [["value", "Int64"]]                               ],
  ["mvp"                 , "f32.const"                 , null  , "0x43", "visitF32Const"              , [["value", "IEEE754.Float32"]]                     ],
  ["mvp"                 , "f64.const"                 , null  , "0x44", "visitF64Const"              , [["value", "IEEE754.Float64"]]                     ],
  ["referenceTypes"      , "ref.null"                  , null  , "0xD0", "visitRefNull"               , [["type", "ReferenceType"]]                        ],
  ["referenceTypes"      , "ref.is_null"               , null  , "0xD1", "visitRefIsNull"             , []                                                 ],
  ["referenceTypes"      , "ref.func"                  , null  , "0xD2", "visitRefFunc"               , [["functionIndex", "UInt32"]]                      ],
  ["mvp"                 , "i32.eqz"                   , null  , "0x45", "visitI32Eqz"                , []                                                 ],
  ["mvp"                 , "i32.eq"                    , null  , "0x46", "visitI32Eq"                 , []                                                 ],
  ["mvp"                 , "i32.ne"                    , null  , "0x47", "visitI32Ne"                 , []                                                 ],
  ["mvp"                 , "i32.lt_s"                  , null  , "0x48", "visitI32LtS"                , []                                                 ],
  ["mvp"                 , "i32.lt_u"                  , null  , "0x49", "visitI32LtU"                , []                                                 ],
  ["mvp"                 , "i32.gt_s"                  , null  , "0x4A", "visitI32GtS"                , []                                                 ],
  ["mvp"                 , "i32.gt_u"                  , null  , "0x4B", "visitI32GtU"                , []                                                 ],
  ["mvp"                 , "i32.le_s"                  , null  , "0x4C", "visitI32LeS"                , []                                                 ],
  ["mvp"                 , "i32.le_u"                  , null  , "0x4D", "visitI32LeU"                , []                                                 ],
  ["mvp"                 , "i32.ge_s"                  , null  , "0x4E", "visitI32GeS"                , []                                                 ],
  ["mvp"                 , "i32.ge_u"                  , null  , "0x4F", "visitI32GeU"                , []                                                 ],
  ["mvp"                 , "i64.eqz"                   , null  , "0x50", "visitI64Eqz"                , []                                                 ],
  ["mvp"                 , "i64.eq"                    , null  , "0x51", "visitI64Eq"                 , []                                                 ],
  ["mvp"                 , "i64.ne"                    , null  , "0x52", "visitI64Ne"                 , []                                                 ],
  ["mvp"                 , "i64.lt_s"                  , null  , "0x53", "visitI64LtS"                , []                                                 ],
  ["mvp"                 , "i64.lt_u"                  , null  , "0x54", "visitI64LtU"                , []                                                 ],
  ["mvp"                 , "i64.gt_s"                  , null  , "0x55", "visitI64GtS"                , []                                                 ],
  ["mvp"                 , "i64.gt_u"                  , null  , "0x56", "visitI64GtU"                , []                                                 ],
  ["mvp"                 , "i64.le_s"                  , null  , "0x57", "visitI64LeS"                , []                                                 ],
  ["mvp"                 , "i64.le_u"                  , null  , "0x58", "visitI64LeU"                , []                                                 ],
  ["mvp"                 , "i64.ge_s"                  , null  , "0x59", "visitI64GeS"                , []                                                 ],
  ["mvp"                 , "i64.ge_u"                  , null  , "0x5A", "visitI64GeU"                , []                                                 ],
  ["mvp"                 , "f32.eq"                    , null  , "0x5B", "visitF32Eq"                 , []                                                 ],
  ["mvp"                 , "f32.ne"                    , null  , "0x5C", "visitF32Ne"                 , []                                                 ],
  ["mvp"                 , "f32.lt"                    , null  , "0x5D", "visitF32Lt"                 , []                                                 ],
  ["mvp"                 , "f32.gt"                    , null  , "0x5E", "visitF32Gt"                 , []                                                 ],
  ["mvp"                 , "f32.le"                    , null  , "0x5F", "visitF32Le"                 , []                                                 ],
  ["mvp"                 , "f32.ge"                    , null  , "0x60", "visitF32Ge"                 , []                                                 ],
  ["mvp"                 , "f64.eq"                    , null  , "0x61", "visitF64Eq"                 , []                                                 ],
  ["mvp"                 , "f64.ne"                    , null  , "0x62", "visitF64Ne"                 , []                                                 ],
  ["mvp"                 , "f64.lt"                    , null  , "0x63", "visitF64Lt"                 , []                                                 ],
  ["mvp"                 , "f64.gt"                    , null  , "0x64", "visitF64Gt"                 , []                                                 ],
  ["mvp"                 , "f64.le"                    , null  , "0x65", "visitF64Le"                 , []                                                 ],
  ["mvp"                 , "f64.ge"                    , null  , "0x66", "visitF64Ge"                 , []                                                 ],
  ["mvp"                 , "i32.clz"                   , null  , "0x67", "visitI32Clz"                , []                                                 ],
  ["mvp"                 , "i32.ctz"                   , null  , "0x68", "visitI32Ctz"                , []                                                 ],
  ["mvp"                 , "i32.popcnt"                , null  , "0x69", "visitI32Popcnt"             , []                                                 ],
  ["mvp"                 , "i32.add"                   , null  , "0x6A", "visitI32Add"                , []                                                 ],
  ["mvp"                 , "i32.sub"                   , null  , "0x6B", "visitI32Sub"                , []                                                 ],
  ["mvp"                 , "i32.mul"                   , null  , "0x6C", "visitI32Mul"                , []                                                 ],
  ["mvp"                 , "i32.div_s"                 , null  , "0x6D", "visitI32DivS"               , []                                                 ],
  ["mvp"                 , "i32.div_u"                 , null  , "0x6E", "visitI32DivU"               , []                                                 ],
  ["mvp"                 , "i32.rem_s"                 , null  , "0x6F", "visitI32RemS"               , []                                                 ],
  ["mvp"                 , "i32.rem_u"                 , null  , "0x70", "visitI32RemU"               , []                                                 ],
  ["mvp"                 , "i32.and"                   , null  , "0x71", "visitI32And"                , []                                                 ],
  ["mvp"                 , "i32.or"                    , null  , "0x72", "visitI32Or"                 , []                                                 ],
  ["mvp"                 , "i32.xor"                   , null  , "0x73", "visitI32Xor"                , []                                                 ],
  ["mvp"                 , "i32.shl"                   , null  , "0x74", "visitI32Shl"                , []                                                 ],
  ["mvp"                 , "i32.shr_s"                 , null  , "0x75", "visitI32ShrS"               , []                                                 ],
  ["mvp"                 , "i32.shr_u"                 , null  , "0x76", "visitI32ShrU"               , []                                                 ],
  ["mvp"                 , "i32.rotl"                  , null  , "0x77", "visitI32Rotl"               , []                                                 ],
  ["mvp"                 , "i32.rotr"                  , null  , "0x78", "visitI32Rotr"               , []                                                 ],
  ["mvp"                 , "i64.clz"                   , null  , "0x79", "visitI64Clz"                , []                                                 ],
  ["mvp"                 , "i64.ctz"                   , null  , "0x7A", "visitI64Ctz"                , []                                                 ],
  ["mvp"                 , "i64.popcnt"                , null  , "0x7B", "visitI64Popcnt"             , []                                                 ],
  ["mvp"                 , "i64.add"                   , null  , "0x7C", "visitI64Add"                , []                                                 ],
  ["mvp"                 , "i64.sub"                   , null  , "0x7D", "visitI64Sub"                , []                                                 ],
  ["mvp"                 , "i64.mul"                   , null  , "0x7E", "visitI64Mul"                , []                                                 ],
  ["mvp"                 , "i64.div_s"                 , null  , "0x7F", "visitI64DivS"               , []                                                 ],
  ["mvp"                 , "i64.div_u"                 , null  , "0x80", "visitI64DivU"               , []                                                 ],
  ["mvp"                 , "i64.rem_s"                 , null  , "0x81", "visitI64RemS"               , []                                                 ],
  ["mvp"                 , "i64.rem_u"                 , null  , "0x82", "visitI64RemU"               , []                                                 ],
  ["mvp"                 , "i64.and"                   , null  , "0x83", "visitI64And"                , []                                                 ],
  ["mvp"                 , "i64.or"                    , null  , "0x84", "visitI64Or"                 , []                                                 ],
  ["mvp"                 , "i64.xor"                   , null  , "0x85", "visitI64Xor"                , []                                                 ],
  ["mvp"                 , "i64.shl"                   , null  , "0x86", "visitI64Shl"                , []                                                 ],
  ["mvp"                 , "i64.shr_s"                 , null  , "0x87", "visitI64ShrS"               , []                                                 ],
  ["mvp"                 , "i64.shr_u"                 , null  , "0x88", "visitI64ShrU"               , []                                                 ],
  ["mvp"                 , "i64.rotl"                  , null  , "0x89", "visitI64Rotl"               , []                                                 ],
  ["mvp"                 , "i64.rotr"                  , null  , "0x8A", "visitI64Rotr"               , []                                                 ],
  ["mvp"                 , "f32.abs"                   , null  , "0x8B", "visitF32Abs"                , []                                                 ],
  ["mvp"                 , "f32.neg"                   , null  , "0x8C", "visitF32Neg"                , []                                                 ],
  ["mvp"                 , "f32.ceil"                  , null  , "0x8D", "visitF32Ceil"               , []                                                 ],
  ["mvp"                 , "f32.floor"                 , null  , "0x8E", "visitF32Floor"              , []                                                 ],
  ["mvp"                 , "f32.trunc"                 , null  , "0x8F", "visitF32Trunc"              , []                                                 ],
  ["mvp"                 , "f32.nearest"               , null  , "0x90", "visitF32Nearest"            , []                                                 ],
  ["mvp"                 , "f32.sqrt"                  , null  , "0x91", "visitF32Sqrt"               , []                                                 ],
  ["mvp"                 , "f32.add"                   , null  , "0x92", "visitF32Add"                , []                                                 ],
  ["mvp"                 , "f32.sub"                   , null  , "0x93", "visitF32Sub"                , []                                                 ],
  ["mvp"                 , "f32.mul"                   , null  , "0x94", "visitF32Mul"                , []                                                 ],
  ["mvp"                 , "f32.div"                   , null  , "0x95", "visitF32Div"                , []                                                 ],
  ["mvp"                 , "f32.min"                   , null  , "0x96", "visitF32Min"                , []                                                 ],
  ["mvp"                 , "f32.max"                   , null  , "0x97", "visitF32Max"                , []                                                 ],
  ["mvp"                 , "f32.copysign"              , null  , "0x98", "visitF32Copysign"           , []                                                 ],
  ["mvp"                 , "f64.abs"                   , null  , "0x99", "visitF64Abs"                , []                                                 ],
  ["mvp"                 , "f64.neg"                   , null  , "0x9A", "visitF64Neg"                , []                                                 ],
  ["mvp"                 , "f64.ceil"                  , null  , "0x9B", "visitF64Ceil"               , []                                                 ],
  ["mvp"                 , "f64.floor"                 , null  , "0x9C", "visitF64Floor"              , []                                                 ],
  ["mvp"                 , "f64.trunc"                 , null  , "0x9D", "visitF64Trunc"              , []                                                 ],
  ["mvp"                 , "f64.nearest"               , null  , "0x9E", "visitF64Nearest"            , []                                                 ],
  ["mvp"                 , "f64.sqrt"                  , null  , "0x9F", "visitF64Sqrt"               , []                                                 ],
  ["mvp"                 , "f64.add"                   , null  , "0xA0", "visitF64Add"                , []                                                 ],
  ["mvp"                 , "f64.sub"                   , null  , "0xA1", "visitF64Sub"                , []                                                 ],
  ["mvp"                 , "f64.mul"                   , null  , "0xA2", "visitF64Mul"                , []                                                 ],
  ["mvp"                 , "f64.div"                   , null  , "0xA3", "visitF64Div"                , []                                                 ],
  ["mvp"                 , "f64.min"                   , null  , "0xA4", "visitF64Min"                , []                                                 ],
  ["mvp"                 , "f64.max"                   , null  , "0xA5", "visitF64Max"                , []                                                 ],
  ["mvp"                 , "f64.copysign"              , null  , "0xA6", "visitF64Copysign"           , []                                                 ],
  ["mvp"                 , "i32.wrap_i64"              , null  , "0xA7", "visitI32WrapI64"            , []                                                 ],
  ["mvp"                 , "i32.trunc_f32_s"           , null  , "0xA8", "visitI32TruncF32S"          , []                                                 ],
  ["mvp"                 , "i32.trunc_f32_u"           , null  , "0xA9", "visitI32TruncF32U"          , []                                                 ],
  ["mvp"                 , "i32.trunc_f64_s"           , null  , "0xAA", "visitI32TruncF64S"          , []                                                 ],
  ["mvp"                 , "i32.trunc_f64_u"           , null  , "0xAB", "visitI32TruncF64U"          , []                                                 ],
  ["mvp"                 , "i64.extend_i32_s"          , null  , "0xAC", "visitI64ExtendI32S"         , []                                                 ],
  ["mvp"                 , "i64.extend_i32_u"          , null  , "0xAD", "visitI64ExtendI32U"         , []                                                 ],
  ["mvp"                 , "i64.trunc_f32_s"           , null  , "0xAE", "visitI64TruncF32S"          , []                                                 ],
  ["mvp"                 , "i64.trunc_f32_u"           , null  , "0xAF", "visitI64TruncF32U"          , []                                                 ],
  ["mvp"                 , "i64.trunc_f64_s"           , null  , "0xB0", "visitI64TruncF64S"          , []                                                 ],
  ["mvp"                 , "i64.trunc_f64_u"           , null  , "0xB1", "visitI64TruncF64U"          , []                                                 ],
  ["mvp"                 , "f32.convert_i32_s"         , null  , "0xB2", "visitF32ConvertI32S"        , []                                                 ],
  ["mvp"                 , "f32.convert_i32_u"         , null  , "0xB3", "visitF32ConvertI32U"        , []                                                 ],
  ["mvp"                 , "f32.convert_i64_s"         , null  , "0xB4", "visitF32ConvertI64S"        , []                                                 ],
  ["mvp"                 , "f32.convert_i64_u"         , null  , "0xB5", "visitF32ConvertI64U"        , []                                                 ],
  ["mvp"                 , "f32.demote_f64"            , null  , "0xB6", "visitF32DemoteF64"          , []                                                 ],
  ["mvp"                 , "f64.convert_i32_s"         , null  , "0xB7", "visitF64ConvertI32S"        , []                                                 ],
  ["mvp"                 , "f64.convert_i32_u"         , null  , "0xB8", "visitF64ConvertI32U"        , []                                                 ],
  ["mvp"                 , "f64.convert_i64_s"         , null  , "0xB9", "visitF64ConvertI64S"        , []                                                 ],
  ["mvp"                 , "f64.convert_i64_u"         , null  , "0xBA", "visitF64ConvertI64U"        , []                                                 ],
  ["mvp"                 , "f64.promote_f32"           , null  , "0xBB", "visitF64PromoteF32"         , []                                                 ],
  ["mvp"                 , "i32.reinterpret_f32"       , null  , "0xBC", "visitI32ReinterpretF32"     , []                                                 ],
  ["mvp"                 , "i64.reinterpret_f64"       , null  , "0xBD", "visitI64ReinterpretF64"     , []                                                 ],
  ["mvp"                 , "f32.reinterpret_i32"       , null  , "0xBE", "visitF32ReinterpretI32"     , []                                                 ],
  ["mvp"                 , "f64.reinterpret_i64"       , null  , "0xBF", "visitF64ReinterpretI64"     , []                                                 ],
  ["signExtension"       , "i32.extend8_s"             , null  , "0xC0", "visitI32Extend8S"           , []                                                 ],
  ["signExtension"       , "i32.extend16_s"            , null  , "0xC1", "visitI32Extend16S"          , []                                                 ],
  ["signExtension"       , "i64.extend8_s"             , null  , "0xC2", "visitI64Extend8S"           , []                                                 ],
  ["signExtension"       , "i64.extend16_s"            , null  , "0xC3", "visitI64Extend16S"          , []                                                 ],
  ["signExtension"       , "i64.extend32_s"            , null  , "0xC4", "visitI64Extend32S"          , []                                                 ],
  ["bulkMemory"          , "memory.init"               , "0xFC", "0x08", "visitMemoryInit"            , [["dataIndex", "UInt32"]]                          ],
  ["bulkMemory"          , "data.drop"                 , "0xFC", "0x09", "visitDataDrop"              , [["dataIndex", "UInt32"]]                          ],
  ["bulkMemory"          , "memory.copy"               , "0xFC", "0x0A", "visitMemoryCopy"            , [["dstMem", "UInt32"], ["srcMem", "UInt32"]]       ],
  ["bulkMemory"          , "memory.fill"               , "0xFC", "0x0B", "visitMemoryFill"            , [["memory", "UInt32"]]                             ],
  ["bulkMemory"          , "table.init"                , "0xFC", "0x0C", "visitTableInit"             , [["elemIndex", "UInt32"], ["table", "UInt32"]]     ],
  ["bulkMemory"          , "elem.drop"                 , "0xFC", "0x0D", "visitElemDrop"              , [["elemIndex", "UInt32"]]                          ],
  ["bulkMemory"          , "table.copy"                , "0xFC", "0x0E", "visitTableCopy"             , [["dstTable", "UInt32"], ["srcTable", "UInt32"]]   ],
  ["referenceTypes"      , "table.fill"                , "0xFC", "0x11", "visitTableFill"             , [["table", "UInt32"]]                              ],
  ["referenceTypes"      , "table.get"                 , null  , "0x25", "visitTableGet"              , [["table", "UInt32"]]                              ],
  ["referenceTypes"      , "table.set"                 , null  , "0x26", "visitTableSet"              , [["table", "UInt32"]]                              ],
  ["referenceTypes"      , "table.grow"                , "0xFC", "0x0F", "visitTableGrow"             , [["table", "UInt32"]]                              ],
  ["referenceTypes"      , "table.size"                , "0xFC", "0x10", "visitTableSize"             , [["table", "UInt32"]]                              ],
  ["saturatingFloatToInt", "i32.trunc_sat_f32_s"       , "0xFC", "0x00", "visitI32TruncSatF32S"       , []                                                 ],
  ["saturatingFloatToInt", "i32.trunc_sat_f32_u"       , "0xFC", "0x01", "visitI32TruncSatF32U"       , []                                                 ],
  ["saturatingFloatToInt", "i32.trunc_sat_f64_s"       , "0xFC", "0x02", "visitI32TruncSatF64S"       , []                                                 ],
  ["saturatingFloatToInt", "i32.trunc_sat_f64_u"       , "0xFC", "0x03", "visitI32TruncSatF64U"       , []                                                 ],
  ["saturatingFloatToInt", "i64.trunc_sat_f32_s"       , "0xFC", "0x04", "visitI64TruncSatF32S"       , []                                                 ],
  ["saturatingFloatToInt", "i64.trunc_sat_f32_u"       , "0xFC", "0x05", "visitI64TruncSatF32U"       , []                                                 ],
  ["saturatingFloatToInt", "i64.trunc_sat_f64_s"       , "0xFC", "0x06", "visitI64TruncSatF64S"       , []                                                 ],
  ["saturatingFloatToInt", "i64.trunc_sat_f64_u"       , "0xFC", "0x07", "visitI64TruncSatF64U"       , []                                                 ],
  ["threads"             , "memory.atomic.notify"      , "0xFE", "0x00", "visitMemoryAtomicNotify"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "memory.atomic.wait32"      , "0xFE", "0x01", "visitMemoryAtomicWait32"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "memory.atomic.wait64"      , "0xFE", "0x02", "visitMemoryAtomicWait64"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "atomic.fence"              , "0xFE", "0x03", "visitAtomicFence"           , []                                                 ],
  ["threads"             , "i32.atomic.load"           , "0xFE", "0x10", "visitI32AtomicLoad"         , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.load"           , "0xFE", "0x11", "visitI64AtomicLoad"         , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.load8_u"        , "0xFE", "0x12", "visitI32AtomicLoad8U"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.load16_u"       , "0xFE", "0x13", "visitI32AtomicLoad16U"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.load8_u"        , "0xFE", "0x14", "visitI64AtomicLoad8U"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.load16_u"       , "0xFE", "0x15", "visitI64AtomicLoad16U"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.load32_u"       , "0xFE", "0x16", "visitI64AtomicLoad32U"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.store"          , "0xFE", "0x17", "visitI32AtomicStore"        , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.store"          , "0xFE", "0x18", "visitI64AtomicStore"        , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.store8"         , "0xFE", "0x19", "visitI32AtomicStore8"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.store16"        , "0xFE", "0x1A", "visitI32AtomicStore16"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.store8"         , "0xFE", "0x1B", "visitI64AtomicStore8"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.store16"        , "0xFE", "0x1C", "visitI64AtomicStore16"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.store32"        , "0xFE", "0x1D", "visitI64AtomicStore32"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.add"        , "0xFE", "0x1E", "visitI32AtomicRmwAdd"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.add"        , "0xFE", "0x1F", "visitI64AtomicRmwAdd"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.add_u"     , "0xFE", "0x20", "visitI32AtomicRmw8AddU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.add_u"    , "0xFE", "0x21", "visitI32AtomicRmw16AddU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.add_u"     , "0xFE", "0x22", "visitI64AtomicRmw8AddU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.add_u"    , "0xFE", "0x23", "visitI64AtomicRmw16AddU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.add_u"    , "0xFE", "0x24", "visitI64AtomicRmw32AddU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.sub"        , "0xFE", "0x25", "visitI32AtomicRmwSub"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.sub"        , "0xFE", "0x26", "visitI64AtomicRmwSub"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.sub_u"     , "0xFE", "0x27", "visitI32AtomicRmw8SubU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.sub_u"    , "0xFE", "0x28", "visitI32AtomicRmw16SubU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.sub_u"     , "0xFE", "0x29", "visitI64AtomicRmw8SubU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.sub_u"    , "0xFE", "0x2A", "visitI64AtomicRmw16SubU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.sub_u"    , "0xFE", "0x2B", "visitI64AtomicRmw32SubU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.and"        , "0xFE", "0x2C", "visitI32AtomicRmwAnd"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.and"        , "0xFE", "0x2D", "visitI64AtomicRmwAnd"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.and_u"     , "0xFE", "0x2E", "visitI32AtomicRmw8AndU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.and_u"    , "0xFE", "0x2F", "visitI32AtomicRmw16AndU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.and_u"     , "0xFE", "0x30", "visitI64AtomicRmw8AndU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.and_u"    , "0xFE", "0x31", "visitI64AtomicRmw16AndU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.and_u"    , "0xFE", "0x32", "visitI64AtomicRmw32AndU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.or"         , "0xFE", "0x33", "visitI32AtomicRmwOr"        , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.or"         , "0xFE", "0x34", "visitI64AtomicRmwOr"        , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.or_u"      , "0xFE", "0x35", "visitI32AtomicRmw8OrU"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.or_u"     , "0xFE", "0x36", "visitI32AtomicRmw16OrU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.or_u"      , "0xFE", "0x37", "visitI64AtomicRmw8OrU"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.or_u"     , "0xFE", "0x38", "visitI64AtomicRmw16OrU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.or_u"     , "0xFE", "0x39", "visitI64AtomicRmw32OrU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.xor"        , "0xFE", "0x3A", "visitI32AtomicRmwXor"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.xor"        , "0xFE", "0x3B", "visitI64AtomicRmwXor"       , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.xor_u"     , "0xFE", "0x3C", "visitI32AtomicRmw8XorU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.xor_u"    , "0xFE", "0x3D", "visitI32AtomicRmw16XorU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.xor_u"     , "0xFE", "0x3E", "visitI64AtomicRmw8XorU"     , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.xor_u"    , "0xFE", "0x3F", "visitI64AtomicRmw16XorU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.xor_u"    , "0xFE", "0x40", "visitI64AtomicRmw32XorU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.xchg"       , "0xFE", "0x41", "visitI32AtomicRmwXchg"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.xchg"       , "0xFE", "0x42", "visitI64AtomicRmwXchg"      , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.xchg_u"    , "0xFE", "0x43", "visitI32AtomicRmw8XchgU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.xchg_u"   , "0xFE", "0x44", "visitI32AtomicRmw16XchgU"   , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.xchg_u"    , "0xFE", "0x45", "visitI64AtomicRmw8XchgU"    , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.xchg_u"   , "0xFE", "0x46", "visitI64AtomicRmw16XchgU"   , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.xchg_u"   , "0xFE", "0x47", "visitI64AtomicRmw32XchgU"   , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw.cmpxchg"    , "0xFE", "0x48", "visitI32AtomicRmwCmpxchg"   , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw.cmpxchg"    , "0xFE", "0x49", "visitI64AtomicRmwCmpxchg"   , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw8.cmpxchg_u" , "0xFE", "0x4A", "visitI32AtomicRmw8CmpxchgU" , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i32.atomic.rmw16.cmpxchg_u", "0xFE", "0x4B", "visitI32AtomicRmw16CmpxchgU", [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw8.cmpxchg_u" , "0xFE", "0x4C", "visitI64AtomicRmw8CmpxchgU" , [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw16.cmpxchg_u", "0xFE", "0x4D", "visitI64AtomicRmw16CmpxchgU", [["memarg", "MemArg"]]                             ],
  ["threads"             , "i64.atomic.rmw32.cmpxchg_u", "0xFE", "0x4E", "visitI64AtomicRmw32CmpxchgU", [["memarg", "MemArg"]]                             ]
]
